version: '3.9'
services:
  # Zookeeper 서비스
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-net

  # Kafka 서비스
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "10000:10000"
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,EXTERNAL://0.0.0.0:10000
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,EXTERNAL://${CHAT_PRIVATE_IP}:10000
      KAFKA_LISTENER_NAMES: INSIDE,EXTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock
    networks:
      - kafka-net

  # MongoDB 서비스
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER_NAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db

volumes:
  mongodb_data:

networks:
  kafka-net:
    driver: bridge
