name: fastapi-poetry-service

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - "develop"
    types:
      - opened
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Python 3.11 설정
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Poetry 설치
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      # 환경변수 설정
      - name: Set Environment Variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}" >> $GITHUB_ENV
          echo "PINECONE_ENV=${{ secrets.PINECONE_ENV }}" >> $GITHUB_ENV
          echo "PINECONE_HOST=${{ secrets.PINECONE_HOST }}" >> $GITHUB_ENV
          echo "UPSTAGE_API_KEY=${{ secrets.UPSTAGE_API_KEY }}" >> $GITHUB_ENV

      # 스크립트 실행 권한 부여
      - name: Grant execute permission for scripts
        run: chmod +x ./scripts/* || echo "No scripts to make executable"

      # 시작 시간 기록
      - name: Record Start Time
        id: record_start
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV

      # Poetry로 의존성 설치
      - name: Install Dependencies with Poetry
        run: poetry install --no-root

      # 실행 시간 계산
      - name: Calculate Duration
        id: calculate_duration
        run: |
          START_TIME=$(cat $GITHUB_ENV | grep start_time | cut -d'=' -f2)
          END_TIME=$(date +%s)
          echo "duration=$((END_TIME - START_TIME))" >> $GITHUB_ENV

      # Discord 알림 전송
      - name: Notify Discord
        if: always() # 항상 실행
        run: |
          # 빌드 상태 가져오기
          if [ "${{ job.status }}" = "success" ]; then
            BUILD_STATUS="success"
          else
            BUILD_STATUS="failure"
          fi
            
          # PR 제목 또는 커밋 메시지 가져오기
          if [ -n "${{ github.event.pull_request.title }}" ]; then
            PR_TITLE="${{ github.event.pull_request.title }}"
          else
            PR_TITLE="${{ github.event.head_commit.message }}"
          fi
            
          # JSON-safe 포맷으로 변환
          SAFE_PR_TITLE=$(echo "$PR_TITLE" | jq -R .)
            
          # 기본값 설정
          DURATION="${{ env.duration }}"
          if [ -z "$DURATION" ]; then
            DURATION="알 수 없음"
          fi
            
          ACTIONS_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            
          # Discord Webhook 호출 함수
          send_discord_notification() {
            local status="$1" # success or failure
            local title=""
            local color=""
            local description=""
            
            if [ "$status" = "success" ]; then
              title="✅ 빌드 성공 알림"
              color=3066993
              description="빌드에 성공했어핑! 🎉\\n\\n"
            else
              title="❌ 빌드 실패 알림"
              color=15158332
              description="빌드에 실패했어핑. 😢\\n\\n"
            fi
            
            # Discord Webhook 호출
            curl -H "Content-Type: application/json" \
              -d "{
                    \"embeds\": [
                      {
                        \"title\": \"$title\",
                        \"description\": \"$description\",
                        \"color\": $color,
                        \"fields\": [
                          {
                            \"name\": \"📝 작업 제목\",
                            \"value\": $SAFE_PR_TITLE,
                            \"inline\": false
                          },
                          {
                            \"name\": \"⏱️ 실행 시간\",
                            \"value\": \"${DURATION}초\\n\\n\",
                            \"inline\": false
                          },
                          {
                            \"name\": \"🔗 디버그 URL\",
                            \"value\": \"[Actions 로그 보기](${ACTIONS_URL})\\n\\n\",
                            \"inline\": false
                          }
                        ]
                      }
                    ]
                  }" \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
          }
            
          # 빌드 성공 및 실패에 따라 Discord 알림 전송
          send_discord_notification "$BUILD_STATUS"