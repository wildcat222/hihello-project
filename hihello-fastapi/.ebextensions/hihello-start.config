files:
  "/sbin/appstart":
    mode: "000755"
    owner: webapp
    group: webapp
    content: |
      #!/bin/bash
      set -e

      echo "Checking and Installing Poetry"
      # Poetry 설치 경로 설정
      export PATH="$HOME/.local/bin:$PATH"
      if ! command -v poetry &> /dev/null; then
          echo "Poetry not found. Installing Poetry..."
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          echo "Poetry installed successfully"
      else
          echo "Poetry is already installed"
      fi

      echo "Activating Python Virtual Environment"
      VENV_PATH="/var/app/current/venv"
      if [ -d "$VENV_PATH" ]; then
          source $VENV_PATH/bin/activate
          echo "Virtual environment activated at $VENV_PATH"
      else
          echo "Virtual environment not found. Creating a new one..."
          python3 -m venv $VENV_PATH
          source $VENV_PATH/bin/activate
          echo "Virtual environment created and activated at $VENV_PATH"
      fi

      echo "Installing dependencies with Poetry"
      PROJECT_DIR="/var/app/current"
      cd $PROJECT_DIR

      if [ -f "pyproject.toml" ]; then
          poetry install --no-root
          echo "Dependencies installed successfully using Poetry"
      else
          echo "Error: pyproject.toml not found in $PROJECT_DIR"
          exit 1
      fi

      echo "Starting FastAPI application with Poetry"
      poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000

option_settings:
  aws:elasticbeanstalk:application:environment:
    ENV: production
    DATABASE_URL: "{DATABASE_URL}"
    PINECONE_API_KEY: "{PINECONE_API_KEY}"
    PINECONE_ENV: "{PINECONE_ENV}"
    PINECONE_HOST: "{PINECONE_HOST}"
    AWS_ACCESS_KEY_ID: "{AWS_ACCESS_KEY_ID}"
    AWS_SECRET_ACCESS_KEY: "{AWS_SECRET_ACCESS_KEY}"
    UPSTAGE_API_KEY: "{UPSTAGE_API_KEY}"